<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[=====Chrome Browser Session Started=====]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="9537" started-at="2020-03-12T21:03:48Z" finished-at="2020-03-12T21:03:58Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="9537" started-at="2020-03-12T21:03:48Z" finished-at="2020-03-12T21:03:58Z">
      <class name="com.noc.testing.FillNocForm">
        <test-method status="PASS" signature="intialization()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="intialization" is-config="true" duration-ms="6067" started-at="2020-03-12T23:03:42Z" finished-at="2020-03-12T23:03:48Z">
          <reporter-output>
            <line>
              <![CDATA[=====Chrome Browser Session Started=====]]>
            </line>
          </reporter-output>
        </test-method> <!-- intialization -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="setup" is-config="true" duration-ms="158" started-at="2020-03-12T23:03:48Z" finished-at="2020-03-12T23:03:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="init" is-config="true" duration-ms="3941" started-at="2020-03-12T23:03:49Z" finished-at="2020-03-12T23:03:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="fillFormWithInvalidData()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="fillFormWithInvalidData" duration-ms="362" started-at="2020-03-12T23:03:53Z" finished-at="2020-03-12T23:03:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thank You] but found [Daily ABB (PCD2) & Dustex(PCD3) Inspection]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thank You] but found [Daily ABB (PCD2) & Dustex(PCD3) Inspection]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at com.noc.testing.FillNocForm.fillFormWithInvalidData(FillNocForm.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillFormWithInvalidData -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="getResult" is-config="true" duration-ms="790" started-at="2020-03-12T23:03:53Z" finished-at="2020-03-12T23:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillFormWithInvalidData status=FAILURE method=FillNocForm.fillFormWithInvalidData()[pri:0, instance:com.noc.testing.FillNocForm@27f674d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="init" is-config="true" duration-ms="1224" started-at="2020-03-12T23:03:54Z" finished-at="2020-03-12T23:03:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="fillFormWithValidData()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="fillFormWithValidData" duration-ms="3034" started-at="2020-03-12T23:03:55Z" finished-at="2020-03-12T23:03:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillFormWithValidData -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="getResult" is-config="true" duration-ms="2" started-at="2020-03-12T23:03:58Z" finished-at="2020-03-12T23:03:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillFormWithValidData status=SUCCESS method=FillNocForm.fillFormWithValidData()[pri:0, instance:com.noc.testing.FillNocForm@27f674d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.noc.testing.FillNocForm@27f674d]" name="endReport" is-config="true" duration-ms="1452" started-at="2020-03-12T23:03:58Z" finished-at="2020-03-12T23:04:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.noc.testing.FillNocForm -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
